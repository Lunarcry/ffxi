#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec4 fragmentColor;
in flat int Multipler;
in flat int useAlpha;
in vec3 materialColor;

// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform mat4 MV;

void main(){
	vec4 myRGBA= texture2D(myTextureSampler, UV).rgba;
//	vec3 MaterialAmbientColor = vec3(0.1,0.1,0.1) * materialColor;

	color.rgb = clamp(myRGBA.rgb*fragmentColor.rgb,0.0,1.0);

	if(useAlpha) {
		color.a = clamp(myRGBA.a*fragmentColor.a*Multipler,0.0,1.0);
	}
	else
		color.a = 1.0;

	if(color.a <0.1)
		discard;
}